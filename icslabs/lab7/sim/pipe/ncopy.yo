                            | #/* $begin ncopy-ys */
                            | ##################################################################
                            | # ncopy.ys - Copy a src block of len words to dst.
                            | # Return the number of positive words (>0) contained in src.
                            | #
                            | # Include your name and ID here.
                            | #
                            | # name : 楼天驰
                            | # ID : 522031910290
                            | #
                            | # Describe how and why you modified the baseline code.
                            | #
                            | # in Loop and Npos, modified "irmovq, addq/subq" to "iaddq" because iaddq is more efficient
                            | # in Loop, move "src++" after read from src, avoid load/use hazard.
                            | # Loop unrolling, make full use of registers(unrolling 5)
                            | #
                            | #
                            | #
                            | #
                            | ##################################################################
                            | # Do not modify this portion
                            | # Function prologue.
                            | # %rdi = src, %rsi = dst, %rdx = len
0x000:                      | ncopy:
                            | 
                            | ##################################################################
                            | # You can modify this portion
                            | 
0x000: 6300                 | 	xorq %rax, %rax
0x002: 6222                 | 	andq %rdx, %rdx
0x004: 768e01000000000000   | 	jg LoopSt
0x00d: 703503000000000000   | 	jmp Done
                            | 
0x016:                      | Loop:	
0x016: 50a70000000000000000 | 	mrmovq (%rdi), %r10	# read val from src...
0x020: 50b70800000000000000 | 	mrmovq 8(%rdi), %r11
0x02a: 50c71000000000000000 | 	mrmovq 16(%rdi), %r12
0x034: 50d71800000000000000 | 	mrmovq 24(%rdi), %r13
0x03e: 50e72000000000000000 | 	mrmovq 32(%rdi), %r14
0x048: 50872800000000000000 | 	mrmovq 40(%rdi), %r8
0x052: 50973000000000000000 | 	mrmovq 48(%rdi), %r9
0x05c: 50573800000000000000 | 	mrmovq 56(%rdi), %rbp
0x066: 40a60000000000000000 | 	rmmovq %r10, (%rsi)	# ...and store it to dst
0x070: 40b60800000000000000 | 	rmmovq %r11, 8(%rsi)
0x07a: 40c61000000000000000 | 	rmmovq %r12, 16(%rsi)
0x084: 40d61800000000000000 | 	rmmovq %r13, 24(%rsi)
0x08e: 40e62000000000000000 | 	rmmovq %r14, 32(%rsi)
0x098: 40862800000000000000 | 	rmmovq %r8, 40(%rsi)
0x0a2: 40963000000000000000 | 	rmmovq %r9, 48(%rsi)
0x0ac: 40563800000000000000 | 	rmmovq %rbp, 56(%rsi)
0x0b6: 62aa                 | 	andq %r10, %r10
0x0b8: 71cb00000000000000   | 	jle Npos1		
0x0c1: c0f00100000000000000 | 	iaddq $1, %rax		
0x0cb: 62bb                 | Npos1:	andq %r11, %r11
0x0cd: 71e000000000000000   | 	jle Npos2		
0x0d6: c0f00100000000000000 | 	iaddq $1, %rax		
0x0e0: 62cc                 | Npos2:	andq %r12, %r12
0x0e2: 71f500000000000000   | 	jle Npos3		
0x0eb: c0f00100000000000000 | 	iaddq $1, %rax		
0x0f5: 62dd                 | Npos3:	andq %r13, %r13
0x0f7: 710a01000000000000   | 	jle Npos4		
0x100: c0f00100000000000000 | 	iaddq $1, %rax	
0x10a: 62ee                 | Npos4:	andq %r14, %r14
0x10c: 711f01000000000000   | 	jle Npos5		
0x115: c0f00100000000000000 | 	iaddq $1, %rax	
0x11f: 6288                 | Npos5:	andq %r8, %r8
0x121: 713401000000000000   | 	jle Npos6		
0x12a: c0f00100000000000000 | 	iaddq $1, %rax	
0x134: 6299                 | Npos6:	andq %r9, %r9
0x136: 714901000000000000   | 	jle Npos7	
0x13f: c0f00100000000000000 | 	iaddq $1, %rax
0x149: 6255                 | Npos7:	andq %rbp, %rbp		
0x14b: 715e01000000000000   | 	jle Npos8		
0x154: c0f00100000000000000 | 	iaddq $1, %rax		
0x15e:                      | Npos8:	
0x15e: c0f74000000000000000 | 	iaddq $64, %rdi		# src+=8
0x168: c0f64000000000000000 | 	iaddq $64, %rsi		# dst+=8
0x172: c0f2f8ffffffffffffff | 	iaddq $-8, %rdx		# len-=8 (unrolling 8)
0x17c: 751600000000000000   | 	jge Loop			# if so, goto Loop:
0x185: 70a101000000000000   | 	jmp LoopEd
0x18e:                      | LoopSt:
0x18e: c0f2f8ffffffffffffff | 	iaddq $-8, %rdx
0x198: 751600000000000000   | 	jge Loop
0x1a1:                      | LoopEd:
0x1a1: c0f20400000000000000 | 	iaddq $4, %rdx
0x1ab: 727602000000000000   | 	jl Next2
0x1b4:                      | Next4:
0x1b4: 50a70000000000000000 | 	mrmovq (%rdi), %r10
0x1be: 50b70800000000000000 | 	mrmovq 8(%rdi), %r11
0x1c8: 50c71000000000000000 | 	mrmovq 16(%rdi), %r12
0x1d2: 50d71800000000000000 | 	mrmovq 24(%rdi), %r13
0x1dc: 40a60000000000000000 | 	rmmovq %r10, (%rsi)
0x1e6: 40b60800000000000000 | 	rmmovq %r11, 8(%rsi)
0x1f0: 40c61000000000000000 | 	rmmovq %r12, 16(%rsi)
0x1fa: 40d61800000000000000 | 	rmmovq %r13, 24(%rsi)
0x204: 62aa                 | 	andq %r10, %r10
0x206: 711902000000000000   | 	jle Nx0
0x20f: c0f00100000000000000 | 	iaddq $1, %rax
0x219: 62bb                 | Nx0: andq %r11, %r11
0x21b: 712e02000000000000   | 	jle Nx1
0x224: c0f00100000000000000 | 	iaddq $1, %rax
0x22e: 62cc                 | Nx1:andq %r12, %r12
0x230: 714302000000000000   | 	jle Nx2
0x239: c0f00100000000000000 | 	iaddq $1, %rax
0x243: 62dd                 | Nx2:andq %r13, %r13
0x245: 715802000000000000   | 	jle Nx3
0x24e: c0f00100000000000000 | 	iaddq $1, %rax
0x258:                      | Nx3:
0x258: c0f72000000000000000 | 	iaddq $32, %rdi		
0x262: c0f62000000000000000 | 	iaddq $32, %rsi		
0x26c: c0f2fcffffffffffffff | 	iaddq $-4, %rdx
                            | 
0x276:                      | Next2:
0x276: c0f20200000000000000 | 	iaddq $2, %rdx
0x280: 72f902000000000000   | 	jl Next1
                            | 
0x289: 50a70000000000000000 | 	mrmovq (%rdi), %r10
0x293: 50b70800000000000000 | 	mrmovq 8(%rdi), %r11
0x29d: 40a60000000000000000 | 	rmmovq %r10, (%rsi)
0x2a7: 40b60800000000000000 | 	rmmovq %r11, 8(%rsi)
0x2b1: 62aa                 | 	andq %r10, %r10
0x2b3: 71c602000000000000   | 	jle Nx4
0x2bc: c0f00100000000000000 | 	iaddq $1, %rax
0x2c6: 62bb                 | Nx4: andq %r11, %r11
0x2c8: 71db02000000000000   | 	jle Nx5
0x2d1: c0f00100000000000000 | 	iaddq $1, %rax
0x2db:                      | Nx5:
0x2db: c0f71000000000000000 | 	iaddq $16, %rdi		
0x2e5: c0f61000000000000000 | 	iaddq $16, %rsi		
0x2ef: c0f2feffffffffffffff | 	iaddq $-2, %rdx
                            | 
0x2f9:                      | Next1:
0x2f9: c0f20100000000000000 | 	iaddq $1, %rdx
0x303: 723503000000000000   | 	jl Done
0x30c: 50a70000000000000000 | 	mrmovq (%rdi), %r10
0x316: 40a60000000000000000 | 	rmmovq %r10, (%rsi)
0x320: 62aa                 | 	andq %r10, %r10
0x322: 713503000000000000   | 	jle Done
0x32b: c0f00100000000000000 | 	iaddq $1, %rax
                            | 	
                            | 
                            | ##################################################################
                            | # Do not modify the following section of code
                            | # Function epilogue.
0x335:                      | Done:
0x335: 90                   | 	ret
                            | ##################################################################
                            | # Keep the following label at the end of your function
0x336:                      | End:
                            | #/* $end ncopy-ys */
